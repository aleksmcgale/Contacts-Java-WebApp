{"ast":null,"code":"var _jsxFileName = \"/Users/aleksmcgale/Desktop/DestinySolutions/frontend/src/Components/ContactBook.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ContactTable from './ContactTable';\nimport AddContactDialog from './AddContactDialog';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport EditContactDialog from './EditContactDialog';\nconst CONTACTS_REST_API_URL = 'http://localhost:8080/api/';\n\nclass ContactBook extends Component {\n  constructor(props) {\n    super(props);\n\n    this.closeAddContactDialog = () => {\n      this.setState({\n        addContact: false\n      });\n    };\n\n    this.closeEditContactDialog = () => {\n      this.setState({\n        editContact: false\n      });\n    };\n\n    this.openEditContactDialog = row => {\n      this.setState({\n        editContact: true,\n        editItem: row\n      });\n    };\n\n    this.handleAddContact = contact => {\n      axios.post(CONTACTS_REST_API_URL + 'contacts', contact).then(response => {\n        console.log(response);\n        console.log(response.data); //this.setState({contacts: response.data, isLoading: false})\n\n        this.setState(prevState => ({\n          contacts: [response.data, ...prevState.contacts]\n        }));\n      });\n    };\n\n    this.handleEditContact = (contact, data) => {\n      console.log(contact, data);\n      axios.put(CONTACTS_REST_API_URL + 'contacts/' + String(contact.id), data).then(response => {\n        console.log(response);\n        console.log(response.data);\n        let temp_array = [...this.state.contacts];\n        var index = temp_array.indexOf(contact);\n\n        if (index !== -1) {\n          temp_array.splice(index, 1);\n          this.setState({\n            contacts: temp_array\n          });\n        }\n\n        this.setState(prevState => ({\n          contacts: [response.data, ...prevState.contacts]\n        }));\n      });\n    };\n\n    this.handleDeleteContact = contact => {\n      console.log(contact, contact.id);\n      axios.delete(CONTACTS_REST_API_URL + 'contacts/' + String(contact.id)).then(response => {\n        let temp_array = [...this.state.contacts];\n        var index = temp_array.indexOf(contact);\n\n        if (index !== -1) {\n          temp_array.splice(index, 1);\n          this.setState({\n            contacts: temp_array\n          });\n        }\n      });\n    };\n\n    this.closeAddContactDialog = this.closeAddContactDialog.bind(this);\n    this.openEditContactDialog = this.openEditContactDialog.bind(this);\n    this.state = {\n      isLoading: true,\n      contacts: [],\n      addContact: false,\n      editContact: false,\n      editItem: {}\n    };\n  }\n\n  async componentDidMount() {\n    axios.get(CONTACTS_REST_API_URL + 'contacts').then(response => {\n      console.log(response);\n      console.log(response.data);\n      this.setState({\n        contacts: response.data,\n        isLoading: false\n      });\n    });\n  }\n\n  filter(item) {\n    let input = item.toLowerCase(); //get list of contacts\n\n    Array.from(list).forEach(function (item) {\n      var itemText = item.textContent.toLowerCase();\n      if (itemText.indexOf(input) != -1) item.style.display = \"block\";else item.style.display = \"none\";\n    });\n  }\n\n  render() {\n    const {\n      contacts,\n      isLoading\n    } = this.state;\n    console.log(contacts);\n\n    if (isLoading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      label: \"Search...\",\n      onChange: e => this.filter(e.target.value),\n      margin: \"normal\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.setState({\n        addContact: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, \"Add Contact\"), /*#__PURE__*/React.createElement(AddContactDialog, {\n      open: this.state.addContact,\n      addContact: this.handleAddContact,\n      closeDialog: this.closeAddContactDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(ContactTable, {\n      rows: contacts,\n      openEdit: this.openEditContactDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(EditContactDialog, {\n      open: this.state.editContact,\n      contact: this.state.editItem,\n      editContact: this.handleEditContact,\n      closeDialog: this.closeEditContactDialog,\n      deleteContact: this.handleDeleteContact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default ContactBook;","map":{"version":3,"sources":["/Users/aleksmcgale/Desktop/DestinySolutions/frontend/src/Components/ContactBook.js"],"names":["React","Component","axios","ContactTable","AddContactDialog","TextField","makeStyles","Button","EditContactDialog","CONTACTS_REST_API_URL","ContactBook","constructor","props","closeAddContactDialog","setState","addContact","closeEditContactDialog","editContact","openEditContactDialog","row","editItem","handleAddContact","contact","post","then","response","console","log","data","prevState","contacts","handleEditContact","put","String","id","temp_array","state","index","indexOf","splice","handleDeleteContact","delete","bind","isLoading","componentDidMount","get","filter","item","input","toLowerCase","Array","from","list","forEach","itemText","textContent","style","display","render","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport axios from 'axios'\nimport ContactTable from './ContactTable'\nimport AddContactDialog from './AddContactDialog'\n\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport EditContactDialog from './EditContactDialog'\n\n\nconst CONTACTS_REST_API_URL = 'http://localhost:8080/api/';\n\n\nclass ContactBook extends Component {\n  constructor(props){\n    super(props);\n    this.closeAddContactDialog = this.closeAddContactDialog.bind(this);\n    this.openEditContactDialog = this.openEditContactDialog.bind(this);\n    this.state = {\n      isLoading: true,\n      contacts: [],\n      addContact:false,\n      editContact:false,\n      editItem: {}\n    };\n  }\n\n\n  async componentDidMount() {\n    axios.get(CONTACTS_REST_API_URL + 'contacts')\n      .then(response => {\n        console.log(response)\n        console.log(response.data)\n        this.setState({contacts: response.data, isLoading: false})\n\n      })\n\n  }\n\n  closeAddContactDialog = () =>{\n    this.setState({ addContact:false})\n\n  }\n\n  closeEditContactDialog = () =>{\n    this.setState({editContact: false})\n  }\n\n  openEditContactDialog = (row)=>{\n    this.setState({editContact: true, editItem: row})\n\n  }\n\n  handleAddContact = (contact) =>{\n    axios.post(CONTACTS_REST_API_URL + 'contacts', contact)\n      .then(response => {\n        console.log(response)\n        console.log(response.data)\n        //this.setState({contacts: response.data, isLoading: false})\n        this.setState(prevState=>({\n          contacts: [response.data, ...prevState.contacts]\n        }))\n      })\n  }\n\n  handleEditContact = (contact, data) =>{\n    console.log(contact, data)\n    axios.put(CONTACTS_REST_API_URL + 'contacts/'+ String(contact.id),  data)\n      .then(response => {\n        console.log(response)\n        console.log(response.data)\n        let temp_array = [...this.state.contacts];\n        var index = temp_array.indexOf(contact)\n        if (index !== -1) {\n          temp_array.splice(index, 1);\n          this.setState({\n            contacts: temp_array\n          })\n        }\n        this.setState(prevState=>({\n          contacts: [response.data, ...prevState.contacts]\n        }))\n\n\n      })\n\n  }\n   filter(item){\n    let input = item.toLowerCase();\n\n    //get list of contacts\n    Array.from(list).forEach(function(item){\n      var itemText = item.textContent.toLowerCase();\n\n      if(itemText.indexOf(input) != -1)\n        item.style.display =\"block\";\n      else\n        item.style.display =\"none\";\n\n    })\n  }\n\n  handleDeleteContact = (contact) =>{\n    console.log(contact, contact.id)\n    axios.delete(CONTACTS_REST_API_URL + 'contacts/'+ String(contact.id) )\n      .then(response => {\n        let temp_array = [...this.state.contacts];\n        var index = temp_array.indexOf(contact)\n        if (index !== -1) {\n          temp_array.splice(index, 1);\n          this.setState({\n            contacts: temp_array\n          })\n        }\n\n\n      })\n\n  }\n\n  render() {\n    const {contacts, isLoading} = this.state;\n    console.log(contacts)\n\n    if (isLoading) {\n      return <p>Loading...</p>;\n    }\n\n    return (\n\n      <div>\n        <div>\n          <TextField label=\"Search...\" onChange={(e)=>this.filter(e.target.value)} margin=\"normal\" variant=\"outlined\" />\n          <Button variant=\"contained\" color=\"primary\" onClick={()=>this.setState({ addContact:true})} >\n            Add Contact\n          </Button>\n          <AddContactDialog open={this.state.addContact} addContact={this.handleAddContact} closeDialog={this.closeAddContactDialog}/>\n        </div>\n        <ContactTable rows={contacts} openEdit={this.openEditContactDialog}/>\n        <EditContactDialog open={this.state.editContact} contact={this.state.editItem} editContact={this.handleEditContact} closeDialog={this.closeEditContactDialog} deleteContact={this.handleDeleteContact}/>\n      </div>\n\n    );\n  }\n}\n\nexport default ContactBook;\n"]},"metadata":{},"sourceType":"module"}